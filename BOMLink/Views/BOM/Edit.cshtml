@model BOMLink.ViewModels.EditBOMViewModel

@{
	ViewData["Title"] = "Edit BOM";
}

<div class="container-fluid mt-4">
	<h2>Edit Bill of Materials</h2>
	@if (Model.Status == BOMStatus.Approved)
	{
		<div class="alert alert-warning">This BOM is Approved and cannot be edited.</div>
		<a href="@Url.Action("Index")" class="btn btn-secondary">Back</a>
	}
	else
	{

		<form asp-action="Edit" asp-controller="BOM" method="post">
			<input type="hidden" asp-for="Id">

			<!-- Description -->
			<div class="mb-3">
				<label class="form-label fw-bold">Description</label>
				<input type="text" class="form-control" asp-for="Description">
				<span class="text-danger" asp-validation-for="Description"></span>
			</div>

			<!-- Job Selection -->
			<div class="mb-3">
				<label class="form-label fw-bold">Select Job (Optional)</label>
				<select id="jobDropdown" class="form-select" asp-for="JobId" onchange="toggleCustomerDropdown()">
					<option value="">-- Select Job --</option>
					@foreach (var job in Model.AvailableJobs)
					{
						<option value="@job.Id" data-customer="@job.CustomerId">@job.Number</option>
					}
				</select>
			</div>

			<!-- Customer Selection (if no Job) -->
			<div class="mb-3">
				<label class="form-label fw-bold">Select Customer (If No Job)</label>
				<select id="customerDropdown" class="form-select" asp-for="CustomerId">
					<option value="">-- Select Customer --</option>
					@foreach (var customer in Model.AvailableCustomers)
					{
						<option value="@customer.Id">@customer.CustomerCode - @customer.Name</option>
					}
				</select>
			</div>

			<!-- Validation Message for Job/Customer -->
			@if (!ViewData.ModelState.IsValid && ViewData.ModelState[string.Empty]?.Errors.Count > 0)
			{
				<span class="text-danger">@ViewData.ModelState[string.Empty].Errors[0].ErrorMessage</span>
			}

			<!-- Buttons -->
			<div class="mt-4">
				<button type="submit" class="btn btn-outline-primary">Update BOM</button>
				<a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
			</div>
		</form>
	}
</div>

<script>
	// Function to toggle the Customer dropdown based on the Job selection
	function toggleCustomerDropdown() {
		var jobDropdown = document.getElementById("jobDropdown");
		var customerDropdown = document.getElementById("customerDropdown");

		var selectedJob = jobDropdown.options[jobDropdown.selectedIndex];
		var associatedCustomerId = selectedJob.getAttribute("data-customer");

		if (selectedJob.value) {
			// A job is selected, disable customer and auto-fill it
			customerDropdown.value = associatedCustomerId;
			customerDropdown.disabled = true;
		} else {
			// No job is selected, allow customer selection
			customerDropdown.disabled = false;
		}
	}

	// Run on page load in case there's a pre-selected Job
	document.addEventListener("DOMContentLoaded", toggleCustomerDropdown);
</script>